worker_processes  1;
pid /tmp/nginx.pid;

error_log /dev/stderr info;

events {
    worker_connections  1024;
}

http {
    include       mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;

    sendfile           on;
    server_tokens      off;
    keepalive_timeout  65;

    # Compression
    # Enable Gzip compressed.
    gzip off;

    # ensure nuget packages can be pushed
    client_max_body_size 128M;
    client_body_temp_path /tmp/nginx/client_body_temp 1 2;

    # http
    server {
        listen 8081 default_server;
        listen [::]:8081 default_server;
        server_name _;
        return 301 https://$host$request_uri:9443;
    }

    # https
    server {
        listen    [::]:9443 ssl default_server;
        listen    9443 ssl default_server;

        allow    all;

        ssl_certificate      <CERT-FILE>;
        ssl_certificate_key  <CERT-KEY>;

        ssl_session_cache shared:MozSSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        ssl_trusted_certificate /etc/ssl/private/ssl.pem;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_temp_path /tmp/nginx/proxy_temp 1 2;

            proxy_pass https://localhost:8082;
        }
    }

    # health
    server {
        listen       [::]:9000;
        listen       9000;

        location /liveness {
            keepalive_timeout 0;
            access_log off;
            add_header Content-Type text/plain;
            return 200;
        }
    }
}
